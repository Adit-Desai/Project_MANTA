/*******************************************************************************
*
* McStas, neutron ray-tracing package
*         Copyright (C) 1997-2008, All rights reserved
*         Risoe National Laboratory, Roskilde, Denmark
*         Institut Laue Langevin, Grenoble, France
*
* Instrument: MANTA Camea
*
* %Identification
* Written by: A. S. Desai
* Date: May 3rd 2024.
* Release McStas: 2.7, also functional up to McStas 3.4
*
* %Description
* A Toy Model version of the Camea Backend for MANTA
*
* Modified to show a proof of concept method of the toy model, which uses a single channel of the analyzers
* All other analyzer channels are removed

* %Parameters
* Ei: 			[meV]          	Mean Incident Energy
*TwoTh:		[deg]		Rotation Angle of the Detector Rack
*psi: 			[deg]		Rotation Angle (in-plane) of the Sample
*AW1:		[]		Width of the Blaze of Analyzer 1
*AW2:		[]		Width of the Blaze of Analyzer 2
*AW3:		[]		Width of the Blaze of Analyzer 3	
*AW4:		[]		Width of the Blaze of Analyzer 4
*AW5:		[]		Width of the Blaze of Analyzer 5
*AW6:		[]		Width of the Blaze of Analyzer 6
*AW7:		[]		Width of the Blaze of Analyzer 7
*AW8:		[]		Width of the Blaze of Analyzer 8
*ana_l_add:	[]
*DET_cen:	[m]			Detector Bank Center
*DET_rad:		[m]			Detector Tube Radius
*DET_len:		[m]			Detector Length
*mosaic_v: [arc minutes]    Analyzer mosaic in the vertical direction
*mosaic_h: [arc minutes]    Analyzer mosaic in the horizontal direction
*
* %Link
*
* %End
*******************************************************************************/

DEFINE INSTRUMENT MANTA_Camea(Ei=4, //E1=3,E2=5.5,
				TwoTh=0.0, psi = 0,
				AW1=0.012, AW2=0.012, AW3=0.0125, AW4=0.013,
				AW5=0.0135, AW6=0.014, AW7= 0.015, AW8=0.016, ana_l_add=0,
				DET_cen=1.2, DET_rad=0.0063, DET_len=0.9, mosaic_v = 60, mosaic_h = 60)

DECLARE %{
// The following terms are used to define the monochromator parameters

double theta;
double wavelength;
double Ei;
double dspacing;
double thetarad;


// The terms below are used to focus the curved monochromator
// rv and rh are the final radius of curviature in the vertical and horizontal direction.
// HMon_radius and VMon_radius are also the radii of curvature (essentially redundant variables,
// apologies for poor coding practices, but it is kept to be consistent with the .instr file used to actually
// produce the simulations.)
double rv;
double rh;
double HMon_radius;
double VMon_radius;
double source_to_mono;
double mono_to_sample;




//Rest of the DECLARE section largely came from the original CAMEA file
/* Order of scattering from the monochromator */
int scat1 = 0;
int scat2 = 0;
int scat3 = 0;
int scat4 = 0;
int scat5 = 0;
int scat6 = 0;
int scat7 = 0;

/* Analyser material parameters*/
double ana_mosaic_h;
double ana_mosaic_v;
// ana_q uses the q for HOPG
double ana_q = 1.87325;
// reflectivity was held constant at 0.8 and did not change. 
double ana_r0 = 0.8; 
/*Analyser geometrical parameters */
double ana_l[9];

// Analyzer positions
double z_an1[8];
double y_an1[8];
double thet_an1[8];
int Ana1a=0;
int Ana1b=0;
int Ana1c=0;
int Ana1d=0;
int Ana1e=0;
int Ana1f=0;
int Ana1g=0;

double z_an2[8];
double y_an2[8];
double thet_an2[8];
int Ana2a=0;
int Ana2b=0;
int Ana2c=0;
int Ana2d=0;
int Ana2e=0;
int Ana2f=0;
int Ana2g=0;

double z_an3[8];
double y_an3[8];
double thet_an3[8];
int Ana3a=0;
int Ana3b=0;
int Ana3c=0;
int Ana3d=0;
int Ana3e=0;
int Ana3f=0;
int Ana3g=0;

double z_an4[8];
double y_an4[8];
double thet_an4[8];
int Ana4a=0;
int Ana4b=0;
int Ana4c=0;
int Ana4d=0;
int Ana4e=0;
int Ana4f=0;
int Ana4g=0;

double z_an5[8];
double y_an5[8];
double thet_an5[8];
int Ana5a=0;
int Ana5b=0;
int Ana5c=0;
int Ana5d=0;
int Ana5e=0;
int Ana5f=0;
int Ana5g=0;

double z_an6[8];
double y_an6[8];
double thet_an6[8];
int Ana6a=0;
int Ana6b=0;
int Ana6c=0;
int Ana6d=0;
int Ana6e=0;
int Ana6f=0;
int Ana6g=0;

double z_an7[8];
double y_an7[8];
double thet_an7[8];
int Ana7a=0;
int Ana7b=0;
int Ana7c=0;
int Ana7d=0;
int Ana7e=0;
int Ana7f=0;
int Ana7g=0;

double z_an8[8];
double y_an8[8];
double thet_an8[8];
int Ana8a=0;
int Ana8b=0;
int Ana8c=0;
int Ana8d=0;
int Ana8e=0;
int Ana8f=0;
int Ana8g=0;

/* Detector parameters */
double det_width = 0.275;
double det_height =0.5;
double PSF = 0.0074/2.35;// FWHM=0.0074m, measured by C. Bahl NIMB 246, 452.

/* Detector parameters */
double ang_1[8];
double ang_2[8];
double detx_1[8];
double detz_1[8];
double detx_2[8];
double detz_2[8];
double dety_1;
double dety_2;
double det_cen;
int i;


%}

INITIALIZE %{
// Calculation of the following terms is needed for focusing.
dspacing = 3.355;
wavelength= sqrt(81.8047/Ei);
theta = (asin(wavelength/(2*dspacing)))*(180/PI);

thetarad = theta * DEG2RAD;

source_to_mono = 1.6;
mono_to_sample = 1.6;


// Rowland focusing equation is below.
HMon_radius = mono_to_sample/sin(thetarad);

// Follows from equation 3.12 from Shirane, Shapiro and Tranquada
VMon_radius = 2*mono_to_sample*source_to_mono*sin(thetarad)/(mono_to_sample+source_to_mono);



rv = VMon_radius;
rh  = HMon_radius;

// Analyzer positions

//The analyzers are placed in approximately straight lines, but are focused using approximate Rowland focusing
// The analyzers aer based off the position 3 (the middle one) and then the others are
// placed and rotated based off the focusing condition. 
z_an1[1]=0.9115;
z_an1[2]=0.9209;
z_an1[3]=0.9300;
z_an1[4]=0.9388;
z_an1[5]=0.9474;
y_an1[1]=-0.0275;
y_an1[2]=-0.0140;
y_an1[3]=0.0000;
y_an1[4]=0.0145;
y_an1[5]=0.0297;

// The angle of rotation (in degrees)
thet_an1[1]=47.17;
thet_an1[2]=48.03;
thet_an1[3]=48.90;
thet_an1[4]=49.79;
thet_an1[5]=50.69;
ana_l[1]=0.0720;
Ana1a=0;
Ana1b=0;
Ana1c=0;
Ana1d=0;
Ana1e=0;
Ana1f=0;
Ana1g=0;

z_an2[1]=0.9744;
z_an2[2]=0.9843;
z_an2[3]=0.9939;
z_an2[4]=1.0033;
z_an2[5]=1.0123;
y_an2[1]=-0.0290;
y_an2[2]=-0.0148;
y_an2[3]=0.0000;
y_an2[4]=0.0153;
y_an2[5]=0.0312;
thet_an2[1]=45.51;
thet_an2[2]=46.35;
thet_an2[3]=47.21;
thet_an2[4]=48.09;
thet_an2[5]=48.98;
ana_l[2]=0.082;
Ana2a=0;
Ana2b=0;
Ana2c=0;
Ana2d=0;
Ana2e=0;
Ana2f=0;
Ana2g=0;

z_an3[1]=1.0354;
z_an3[2]=1.0462;
z_an3[3]=1.0569;
z_an3[4]=1.0671;
z_an3[5]=1.0771;
y_an3[1]=-0.0311;
y_an3[2]=-0.0160;
y_an3[3]=0.0000;
y_an3[4]=0.0165;
y_an3[5]=0.0338;
thet_an3[1]=43.81;
thet_an3[2]=44.65;
thet_an3[3]=45.53;
thet_an3[4]=46.41;
thet_an3[5]=47.32;
ana_l[3]=0.092;
Ana3a=0;
Ana3b=0;
Ana3c=0;
Ana3d=0;
Ana3e=0;
Ana3f=0;
Ana3g=0;

z_an4[1]=1.0959;
z_an4[2]=1.1078;
z_an4[3]=1.1195;
z_an4[4]=1.1309;
z_an4[5]=1.1420;
y_an4[1]=-0.0332;
y_an4[2]=-0.0170;
y_an4[3]=0.0000;
y_an4[4]=0.0177;
y_an4[5]=0.0362;
thet_an4[1]=42.11;
thet_an4[2]=42.96;
thet_an4[3]=43.84;
thet_an4[4]=44.74;
thet_an4[5]=45.66;
ana_l[4]=0.103;
Ana4a=0;
Ana4b=0;
Ana4c=0;
Ana4d=0;
Ana4e=0;
Ana4f=0;
Ana4g=0;

z_an5[1]=1.1567;
z_an5[2]=1.1697;
z_an5[3]=1.1827;
z_an5[4]=1.1953;
z_an5[5]=1.2076;
y_an5[1]=-0.0350;
y_an5[2]=-0.0180;
y_an5[3]=0.0000;
y_an5[4]=0.0187;
y_an5[5]=0.0382;
thet_an5[1]=40.42;
thet_an5[2]=41.27;
thet_an5[3]=42.16;
thet_an5[4]=43.05;
thet_an5[5]=43.97;
ana_l[5]=0.113;
Ana5a=0;
Ana5b=0;
Ana5c=0;
Ana5d=0;
Ana5e=0;
Ana5f=0;
Ana5g=0;

z_an6[1]=1.2170;
z_an6[2]=1.2313;
z_an6[3]=1.2456;
z_an6[4]=1.2595;
z_an6[5]=1.2732;
y_an6[1]=-0.0365;
y_an6[2]=-0.0188;
y_an6[3]=0.0000;
y_an6[4]=0.0195;
y_an6[5]=0.0402;
thet_an6[1]=38.75;
thet_an6[2]=39.60;
thet_an6[3]=40.47;
thet_an6[4]=41.36;
thet_an6[5]=42.28;
ana_l[6]=0.120;
Ana6a=0;
Ana6b=0;
Ana6c=0;
Ana6d=0;
Ana6e=0;
Ana6f=0;
Ana6g=0;

z_an7[1]=1.2775;
z_an7[2]=1.2936;
z_an7[3]=1.3098;
z_an7[4]=1.3256;
z_an7[5]=1.3413;
y_an7[1]=-0.0389;
y_an7[2]=-0.0201;
y_an7[3]=0.0000;
y_an7[4]=0.0209;
y_an7[5]=0.0431;
thet_an7[1]=37.04;
thet_an7[2]=37.90;
thet_an7[3]=38.79;
thet_an7[4]=39.69;
thet_an7[5]=40.63;
ana_l[7]=0.129;
Ana7a=0;
Ana7b=0;
Ana7c=0;
Ana7d=0;
Ana7e=0;
Ana7f=0;
Ana7g=0;

z_an8[1]=1.3385;
z_an8[2]=1.3565;
z_an8[3]=1.3747;
z_an8[4]=1.3925;
z_an8[5]=1.4102;
y_an8[1]=-0.0409;
y_an8[2]=-0.0212;
y_an8[3]=0.0000;
y_an8[4]=0.0221;
y_an8[5]=0.0456;
thet_an8[1]=35.35;
thet_an8[2]=36.21;
thet_an8[3]=37.10;
thet_an8[4]=38.01;
thet_an8[5]=38.95;
ana_l[8]=0.140;
Ana8a=0;
Ana8b=0;
Ana8c=0;
Ana8d=0;
Ana8e=0;
Ana8f=0;
Ana8g=0;

ana_l[1]=ana_l[1]+ana_l_add;
ana_l[2]=ana_l[2]+ana_l_add;
ana_l[3]=ana_l[3]+ana_l_add;
ana_l[4]=ana_l[4]+ana_l_add;
ana_l[5]=ana_l[5]+ana_l_add;
ana_l[6]=ana_l[6]+ana_l_add;
ana_l[7]=ana_l[7]+ana_l_add;
ana_l[8]=ana_l[8]+ana_l_add;


// Detector positions
//Offset angles for each detector. 
ang_1[0]=-3.33;
ang_1[1]=-2.22;
ang_1[2]=-1.11;
ang_1[3]=0;
ang_1[4]=1.11;
ang_1[5]=2.22;
ang_1[6]=3.33;

ang_2[0]=-2.775;
ang_2[1]=-1.665;
ang_2[2]=-0.555;
ang_2[3]=0.555;
ang_2[4]=1.665;
ang_2[5]=2.775;

dety_1=0.7;
dety_2=0.71;
det_cen=DET_cen;

//Offset position for each detector using angle
for (i=0; i<7; i++){
	detx_1[i] = -sin(ang_1[i]*PI/180)*det_cen;
	detz_1[i] = cos(ang_1[i]*PI/180)*det_cen;
}

for (i=0; i<6; i++){
	detx_2[i] = -sin(ang_2[i]*PI/180)*det_cen;
	detz_2[i] = cos(ang_2[i]*PI/180)*det_cen;
}

%}

/*******************************************************/
/*										    */
/*  			BEGINNING OF THE TRACE		    */
/*										    */
/*******************************************************/
TRACE

COMPONENT arm0 = Progress_bar()
  AT (0,0,0) ABSOLUTE

COMPONENT armSource = Arm()
  AT (0, 0, 0) ABSOLUTE

// A note, sample arm was supposed to be placed with the actual sample arms. However, due to 
// earlier misunderstanding of the function of a code, it essentially became a deprecated component.
// Arms in general are based around arm a4a (the rotation of the first analyzer channel)
// However for the toy model only one analyzer channel, and therefore only a4a, is used.
COMPONENT Sample_Arm = Arm()
     AT (0, 0, 0) RELATIVE armSource 
ROTATED (0, 0, 0) RELATIVE armSource
//Source term matches roughly the expected profile as from the incident beamline planned
// for MANTA, contact Garrett Granroth for more information.
COMPONENT source_gen = Source_gen(
    radius = 0.01,
    dist=source_to_mono, 
    focus_xw=.3, 
    focus_yh=.168, 
    E0 = Ei,
    dE = Ei*0.2

)
AT (0, 0, 0) RELATIVE PREVIOUS

//apologies for poor naming conventions, but I will keep it named as it is in the file used to produce the data
// Essentially an arm to rotate the monochromator 
COMPONENT arm49 = Arm()
AT (0, 0, source_to_mono) RELATIVE PREVIOUS
ROTATED (0, theta, 0) RELATIVE PREVIOUS

// Same monochromator design as the one used in the incident beamline.
COMPONENT monochromator_curved2 = Monochromator_curved(
    zwidth=0.015,
    yheight=0.015,
    mosaich=27, 
    mosaicv=27, 
    r0=1,
    RV= rv,
    RH= HMon_radius, 
    DM=dspacing, 
    width=0.3, 
    height=0.168)
AT (0, 0, 0) RELATIVE PREVIOUS

// Arm for rotating after the monochromator, effectively, now the beam has rotated
// By 2theta

COMPONENT arm55 = Arm()
AT (0, 0, 0) RELATIVE PREVIOUS
ROTATED (0, theta, 0) RELATIVE PREVIOUS

// A psd to see the beam profile after the monochromator.
// Apologies for the poor naming convention for the file names
COMPONENT psd_monitor78 = PSD_monitor(
    filename="maya", 
    xwidth=.3, 
    yheight=.3, 
    restore_neutron=1)
AT (0, 0, mono_to_sample-0.5) RELATIVE PREVIOUS

// An energy monitor to see the beam's energy profile 1.1 meters after the monochromator.
// Apologies for the poor naming convention for the file names
COMPONENT e_monitor78 = E_monitor(
    filename="mayE", 
    xwidth=.3, 
    yheight=.3, 
    Emin=1, 
    Emax=12, 
    restore_neutron=1)
AT (0, 0, 0) RELATIVE PREVIOUS

// An arm placed at the sample position. The total mono-to-sample distance is 1.5 meters,
// So the arm is placed 0.5 meters from the energy monitor.
COMPONENT arm = Arm()
AT (0, 0, 0.5) RELATIVE PREVIOUS
ROTATED (0, psi, 0) RELATIVE PREVIOUS

// The design of the cylindrical 1x2cm sample used to produce the bosonic dispersion
// used in the design. It uses a constant cubic lattice structure with spacing a=6.28 (2pi)
// and a speed of sound of 2.5 meV/AA, which covers most of the space 
// of the energy covered. The Debye Waller factor, mass and temperature 
// are not too important, essentially it is by and large an ordered phonon.

//The sigma absorption and sigma incoherent and scattering length
// were very loosely based on the compound PbSe, but in hindsight
// the scattering length should be very large and absorption should be
// minimal (or 0). Incoherent scattering can be included if desired, but
// is not essential.

COMPONENT phonon_simple = Phonon_simple(
    radius=0.01, 
    yheight=0.02, 
    sigma_abs=.171, 
    sigma_inc=.32, 
    a=6.28, 
    b=9.405, 
    M=207.2, 
    c=2.5, 
    DW=1, 
    T=10)
AT (0, 0, 0) RELATIVE PREVIOUS
EXTEND %{
if (RAD2DEG*atan(fabs(vy)/(vx*vx + vz*vz)) > 5) ABSORB;
%}   
// The above line is to remove any out-of-plane scattering. 


/** Arms for the Analyser Rack **/

COMPONENT a4a = Arm()
     AT (0, 0, 0) RELATIVE PREVIOUS //Sample_Arm 
ROTATED (0, TwoTh-psi, 0) RELATIVE PREVIOUS //armSource
EXTEND %{
  Ana1a=0; 
  Ana2a=0; 
  Ana3a=0; 
  Ana4a=0; 
  Ana5a=0; 
  Ana6a=0; 
  Ana7a=0; 
  Ana8a=0; 
scat1=0;
%}
// collimator originally included in file but was not used
/*
COMPONENT collimator_linear = Collimator_linear(
    xmin=-.065, 
    xmax=.065, 
    ymin=-.065, 
    ymax=.065, 
    length=.5, 
    divergence=60)
AT (0, 0, .08) RELATIVE PREVIOUS
ROTATED (0, 0,0) RELATIVE PREVIOUS
*/


// A slit is included to help remove unnecessary events that won't reach the analyzers.
COMPONENT slit2 = Slit(
    xwidth=.1, 
    yheight=.1)
AT (0, 0, z_an1[1]-.1) RELATIVE a4a
ROTATED(0,0,0) RELATIVE a4a

// More PSD monitors and energy monitors (with poorly chosen names)
// are placed to view the beam profile after the sample.
COMPONENT psd_monitor58 = PSD_monitor(
    filename="maya2", 
    xwidth=.3, 
    yheight=.3, 
    restore_neutron=1)
AT (0, 0, .05) RELATIVE PREVIOUS

COMPONENT e_monitor58 = E_monitor(
    filename="mayE2", 
    xwidth=.3, 
    yheight=.3, 
    Emin=1, 
    Emax=12, 
    restore_neutron=1)
AT (0, 0, 0) RELATIVE PREVIOUS


// The below arms are not used in the toy model simulations.

/**
COMPONENT a4b = Arm()
     AT (0, 0, 0) RELATIVE Sample_Arm 
ROTATED (0, TwoTh+8.0, 0) RELATIVE armSource
EXTEND %{
  Ana1b=0; 
  Ana2b=0; 
  Ana3b=0; 
  Ana4b=0; 
  Ana5b=0; 
  Ana6b=0; 
  Ana7b=0; 
  Ana8b=0; 
scat2=0;
%}

COMPONENT a4c = Arm()
     AT (0, 0, 0) RELATIVE Sample_Arm 
ROTATED (0, TwoTh+16.0, 0) RELATIVE armSource
EXTEND %{
  Ana1c=0; 
  Ana2c=0; 
  Ana3c=0; 
  Ana4c=0; 
  Ana5c=0; 
  Ana6c=0; 
  Ana7c=0; 
  Ana8c=0; 
scat3=0;
%}

COMPONENT a4d = Arm()
     AT (0, 0, 0) RELATIVE Sample_Arm 
ROTATED (0, TwoTh+24.0, 0) RELATIVE armSource
EXTEND %{
  Ana1d=0; 
  Ana2d=0; 
  Ana3d=0; 
  Ana4d=0; 
  Ana5d=0; 
  Ana6d=0; 
  Ana7d=0; 
  Ana8d=0; 
scat4=0;
%}

COMPONENT a4e = Arm()
     AT (0, 0, 0) RELATIVE Sample_Arm 
ROTATED (0, TwoTh+32.0, 0) RELATIVE armSource
EXTEND %{
  Ana1e=0; 
  Ana2e=0; 
  Ana3e=0; 
  Ana4e=0; 
  Ana5e=0; 
  Ana6e=0; 
  Ana7e=0; 
  Ana8e=0; 
scat5=0;
%}

COMPONENT a4f = Arm()
     AT (0, 0, 0) RELATIVE Sample_Arm 
ROTATED (0, TwoTh+40.0, 0) RELATIVE armSource
EXTEND %{
  Ana1f=0; 
  Ana2f=0; 
  Ana3f=0; 
  Ana4f=0; 
  Ana5f=0; 
  Ana6f=0; 
  Ana7f=0; 
  Ana8f=0; 
scat6=0;
%}

COMPONENT a4g = Arm()
     AT (0, 0, 0) RELATIVE Sample_Arm 
ROTATED (0, TwoTh+48.0, 0) RELATIVE armSource
EXTEND %{
  Ana1g=0; 
  Ana2g=0; 
  Ana3g=0; 
  Ana4g=0; 
  Ana5g=0; 
  Ana6g=0; 
  Ana7g=0; 
  Ana8g=0; 
scat7=0;
%}
**/
/*************************************/
// Below components were not used and came with original CAMEA file.
/*
COMPONENT beamstopL = Beamstop(
    xmin=-1, 
    xmax=-.005, 
    ymin=-.5, 
    ymax=.5)
AT (0, 0, 0.05) RELATIVE source_gen

COMPONENT beamstopR = Beamstop(
    xmin=.005, 
    xmax=1, 
    ymin=-.5, 
    ymax=.5)
AT (0, 0, 0.0501) RELATIVE source_gen

COMPONENT beamstop1 = Beamstop(
    xmin=-1, 
    xmax=-.005, 
    ymin=-.5, 
    ymax=.5)
AT (0, 0, .1) RELATIVE source_gen

COMPONENT beamstop2 = Beamstop(
    xmin=.005, 
    xmax=1, 
    ymin=-.5, 
    ymax=.5)
AT (0, 0, .101) RELATIVE source_gen

*/

// Be Filter
//COMPONENT Be_filter = Filter_gen(
//    filename = "Be.trm", options = "wavevector multiply", xmin = -0.1,
//    xmax = 0.1, ymin = -0.1, ymax = 0.1, thickness = 0.12)
// AT (0, 0, 0.2005) RELATIVE a4

/***************** ENTIRE rack of Analyser 1 ******************/


//All the analyzer components have the same general format, their 
// dimensions are defined with z, y
// reflectivity and Q (of HOPG) is given
// and their location, size, angle, is given based on previous calculations
// The angles given above are based off Rowland energy focusing.
COMPONENT an11a= Monochromator_flat(
 	zmin=-ana_l[1]/2, zmax=ana_l[1]/2, ymin=-AW1/2, ymax=AW1/2,
   	mosaich=mosaic_h, mosaicv=mosaic_v,
 	r0=ana_r0, Q=ana_q)
  AT (0, y_an1[1], z_an1[1]) RELATIVE a4a
  ROTATED (90-thet_an1[1], 90.0, 0) RELATIVE a4a
GROUP Analyzer
EXTEND %{
  if(SCATTERED) {Ana1a = 1;
scat1=1;}
%}

COMPONENT an12a= Monochromator_flat(
 	zmin=-ana_l[1]/2, zmax=ana_l[1]/2, ymin=-AW1/2, ymax=AW1/2,
   	mosaich=mosaic_h, mosaicv=mosaic_v,
 	r0=ana_r0, Q=ana_q)
  AT (0, y_an1[2], z_an1[2]) RELATIVE a4a
  ROTATED (90-thet_an1[2], 90.0, 0) RELATIVE a4a
GROUP Analyzer
EXTEND %{
  if(SCATTERED) {Ana1a = 2;
scat1=1;}
%}

COMPONENT an13a= Monochromator_flat(
 	zmin=-ana_l[1]/2, zmax=ana_l[1]/2, ymin=-AW1/2, ymax=AW1/2,
   	mosaich=mosaic_h, mosaicv=mosaic_v,
 	r0=ana_r0, Q=ana_q)
  AT (0, y_an1[3], z_an1[3]) RELATIVE a4a
  ROTATED (90-thet_an1[3], 90.0, 0) RELATIVE a4a
GROUP Analyzer
EXTEND %{
  if(SCATTERED) {Ana1a = 3;
scat1=1;}
%}

COMPONENT an14a= Monochromator_flat(
 	zmin=-ana_l[1]/2, zmax=ana_l[1]/2, ymin=-AW1/2, ymax=AW1/2,
   	mosaich=mosaic_h, mosaicv=mosaic_v,
 	r0=ana_r0, Q=ana_q)
  AT (0, y_an1[4], z_an1[4]) RELATIVE a4a
  ROTATED (90-thet_an1[4], 90.0, 0) RELATIVE a4a
GROUP Analyzer
EXTEND %{
  if(SCATTERED) {Ana1a = 4;
scat1=1;}
%}

COMPONENT an15a= Monochromator_flat(
 	zmin=-ana_l[1]/2, zmax=ana_l[1]/2, ymin=-AW1/2, ymax=AW1/2,
   	mosaich=mosaic_h, mosaicv=mosaic_v,
 	r0=ana_r0, Q=ana_q)
  AT (0, y_an1[5], z_an1[5]) RELATIVE a4a
  ROTATED (90-thet_an1[5], 90.0, 0) RELATIVE a4a
GROUP Analyzer
EXTEND %{
  if(SCATTERED) {Ana1a = 5;
scat1=1;}
%}


COMPONENT an21a= Monochromator_flat(
 	zmin=-ana_l[2]/2, zmax=ana_l[2]/2, ymin=-AW2/2, ymax=AW2/2,
   	mosaich=mosaic_h, mosaicv=mosaic_v,
 	r0=ana_r0, Q=ana_q)
  AT (0, y_an2[1], z_an2[1]) RELATIVE a4a
  ROTATED (90-thet_an2[1], 90.0, 0) RELATIVE a4a
GROUP Analyzer
EXTEND %{
  if(SCATTERED) {Ana2a = 1;
scat1=1;}
%}

COMPONENT an22a= Monochromator_flat(
 	zmin=-ana_l[2]/2, zmax=ana_l[2]/2, ymin=-AW2/2, ymax=AW2/2,
   	mosaich=mosaic_h, mosaicv=mosaic_v,
 	r0=ana_r0, Q=ana_q)
  AT (0, y_an2[2], z_an2[2]) RELATIVE a4a
  ROTATED (90-thet_an2[2], 90.0, 0) RELATIVE a4a
GROUP Analyzer
EXTEND %{
  if(SCATTERED) {Ana2a = 2;
scat1=1;}
%}

COMPONENT an23a= Monochromator_flat(
 	zmin=-ana_l[2]/2, zmax=ana_l[2]/2, ymin=-AW2/2, ymax=AW2/2,
   	mosaich=mosaic_h, mosaicv=mosaic_v,
 	r0=ana_r0, Q=ana_q)
  AT (0, y_an2[3], z_an2[3]) RELATIVE a4a
  ROTATED (90-thet_an2[3], 90.0, 0) RELATIVE a4a
GROUP Analyzer
EXTEND %{
  if(SCATTERED) {Ana2a = 3;
scat1=1;}
%}

COMPONENT an24a= Monochromator_flat(
 	zmin=-ana_l[2]/2, zmax=ana_l[2]/2, ymin=-AW2/2, ymax=AW2/2,
   	mosaich=mosaic_h, mosaicv=mosaic_v,
 	r0=ana_r0, Q=ana_q)
  AT (0, y_an2[4], z_an2[4]) RELATIVE a4a
  ROTATED (90-thet_an2[4], 90.0, 0) RELATIVE a4a
GROUP Analyzer
EXTEND %{
  if(SCATTERED) {Ana2a = 4;
scat1=1;}
%}

COMPONENT an25a= Monochromator_flat(
 	zmin=-ana_l[2]/2, zmax=ana_l[2]/2, ymin=-AW2/2, ymax=AW2/2,
   	mosaich=mosaic_h, mosaicv=mosaic_v,
 	r0=ana_r0, Q=ana_q)
  AT (0, y_an2[5], z_an2[5]) RELATIVE a4a
  ROTATED (90-thet_an2[5], 90.0, 0) RELATIVE a4a
GROUP Analyzer
EXTEND %{
  if(SCATTERED) {Ana2a = 5;
scat1=1;}
%}


COMPONENT an31a= Monochromator_flat(
 	zmin=-ana_l[3]/2, zmax=ana_l[3]/2, ymin=-AW3/2, ymax=AW3/2,
   	mosaich=mosaic_h, mosaicv=mosaic_v,
 	r0=ana_r0, Q=ana_q)
  AT (0, y_an3[1], z_an3[1]) RELATIVE a4a
  ROTATED (90-thet_an3[1], 90.0, 0) RELATIVE a4a
GROUP Analyzer
EXTEND %{
  if(SCATTERED) {Ana3a = 1;
scat1=1;}
%}

COMPONENT an32a= Monochromator_flat(
 	zmin=-ana_l[3]/2, zmax=ana_l[3]/2, ymin=-AW3/2, ymax=AW3/2,
   	mosaich=mosaic_h, mosaicv=mosaic_v,
 	r0=ana_r0, Q=ana_q)
  AT (0, y_an3[2], z_an3[2]) RELATIVE a4a
  ROTATED (90-thet_an3[2], 90.0, 0) RELATIVE a4a
GROUP Analyzer
EXTEND %{
  if(SCATTERED) {Ana3a = 2;
scat1=1;}
%}

COMPONENT an33a= Monochromator_flat(
 	zmin=-ana_l[3]/2, zmax=ana_l[3]/2, ymin=-AW3/2, ymax=AW3/2,
   	mosaich=mosaic_h, mosaicv=mosaic_v,
 	r0=ana_r0, Q=ana_q)
  AT (0, y_an3[3], z_an3[3]) RELATIVE a4a
  ROTATED (90-thet_an3[3], 90.0, 0) RELATIVE a4a
GROUP Analyzer
EXTEND %{
  if(SCATTERED) {Ana3a = 3;
scat1=1;}
%}

COMPONENT an34a= Monochromator_flat(
 	zmin=-ana_l[3]/2, zmax=ana_l[3]/2, ymin=-AW3/2, ymax=AW3/2,
   	mosaich=mosaic_h, mosaicv=mosaic_v,
 	r0=ana_r0, Q=ana_q)
  AT (0, y_an3[4], z_an3[4]) RELATIVE a4a
  ROTATED (90-thet_an3[4], 90.0, 0) RELATIVE a4a
GROUP Analyzer
EXTEND %{
  if(SCATTERED) {Ana3a = 4;
scat1=1;}
%}

COMPONENT an35a= Monochromator_flat(
 	zmin=-ana_l[3]/2, zmax=ana_l[3]/2, ymin=-AW3/2, ymax=AW3/2,
   	mosaich=mosaic_h, mosaicv=mosaic_v,
 	r0=ana_r0, Q=ana_q)
  AT (0, y_an3[5], z_an3[5]) RELATIVE a4a
  ROTATED (90-thet_an3[5], 90.0, 0) RELATIVE a4a
GROUP Analyzer
EXTEND %{
  if(SCATTERED) {Ana3a = 5;
scat1=1;}
%}


COMPONENT an41a= Monochromator_flat(
 	zmin=-ana_l[4]/2, zmax=ana_l[4]/2, ymin=-AW4/2, ymax=AW4/2,
   	mosaich=mosaic_h, mosaicv=mosaic_v,
 	r0=ana_r0, Q=ana_q)
  AT (0, y_an4[1], z_an4[1]) RELATIVE a4a
  ROTATED (90-thet_an4[1], 90.0, 0) RELATIVE a4a
GROUP Analyzer
EXTEND %{
  if(SCATTERED) {Ana4a = 1;
scat1=1;}
%}

COMPONENT an42a= Monochromator_flat(
 	zmin=-ana_l[4]/2, zmax=ana_l[4]/2, ymin=-AW4/2, ymax=AW4/2,
   	mosaich=mosaic_h, mosaicv=mosaic_v,
 	r0=ana_r0, Q=ana_q)
  AT (0, y_an4[2], z_an4[2]) RELATIVE a4a
  ROTATED (90-thet_an4[2], 90.0, 0) RELATIVE a4a
GROUP Analyzer
EXTEND %{
  if(SCATTERED) {Ana4a = 2;
scat1=1;}
%}

COMPONENT an43a= Monochromator_flat(
 	zmin=-ana_l[4]/2, zmax=ana_l[4]/2, ymin=-AW4/2, ymax=AW4/2,
   	mosaich=mosaic_h, mosaicv=mosaic_v,
 	r0=ana_r0, Q=ana_q)
  AT (0, y_an4[3], z_an4[3]) RELATIVE a4a
  ROTATED (90-thet_an4[3], 90.0, 0) RELATIVE a4a
GROUP Analyzer
EXTEND %{
  if(SCATTERED) {Ana4a = 3;
scat1=1;}
%}

COMPONENT an44a= Monochromator_flat(
 	zmin=-ana_l[4]/2, zmax=ana_l[4]/2, ymin=-AW4/2, ymax=AW4/2,
   	mosaich=mosaic_h, mosaicv=mosaic_v,
 	r0=ana_r0, Q=ana_q)
  AT (0, y_an4[4], z_an4[4]) RELATIVE a4a
  ROTATED (90-thet_an4[4], 90.0, 0) RELATIVE a4a
GROUP Analyzer
EXTEND %{
  if(SCATTERED) {Ana4a = 4;
scat1=1;}
%}

COMPONENT an45a= Monochromator_flat(
 	zmin=-ana_l[4]/2, zmax=ana_l[4]/2, ymin=-AW4/2, ymax=AW4/2,
   	mosaich=mosaic_h, mosaicv=mosaic_v,
 	r0=ana_r0, Q=ana_q)
  AT (0, y_an4[5], z_an4[5]) RELATIVE a4a
  ROTATED (90-thet_an4[5], 90.0, 0) RELATIVE a4a
GROUP Analyzer
EXTEND %{
  if(SCATTERED) {Ana4a = 5;
scat1=1;}
%}


COMPONENT an51a= Monochromator_flat(
 	zmin=-ana_l[5]/2, zmax=ana_l[5]/2, ymin=-AW5/2, ymax=AW5/2,
   	mosaich=mosaic_h, mosaicv=mosaic_v,
 	r0=ana_r0, Q=ana_q)
  AT (0, y_an5[1], z_an5[1]) RELATIVE a4a
  ROTATED (90-thet_an5[1], 90.0, 0) RELATIVE a4a
GROUP Analyzer
EXTEND %{
  if(SCATTERED) {Ana5a = 1;
scat1=1;}
%}

COMPONENT an52a= Monochromator_flat(
 	zmin=-ana_l[5]/2, zmax=ana_l[5]/2, ymin=-AW5/2, ymax=AW5/2,
   	mosaich=mosaic_h, mosaicv=mosaic_v,
 	r0=ana_r0, Q=ana_q)
  AT (0, y_an5[2], z_an5[2]) RELATIVE a4a
  ROTATED (90-thet_an5[2], 90.0, 0) RELATIVE a4a
GROUP Analyzer
EXTEND %{
  if(SCATTERED) {Ana5a = 2;
scat1=1;}
%}

COMPONENT an53a= Monochromator_flat(
 	zmin=-ana_l[5]/2, zmax=ana_l[5]/2, ymin=-AW5/2, ymax=AW5/2,
   	mosaich=mosaic_h, mosaicv=mosaic_v,
 	r0=ana_r0, Q=ana_q)
  AT (0, y_an5[3], z_an5[3]) RELATIVE a4a
  ROTATED (90-thet_an5[3], 90.0, 0) RELATIVE a4a
GROUP Analyzer
EXTEND %{
  if(SCATTERED) {Ana5a = 3;
scat1=1;}
%}

COMPONENT an54a= Monochromator_flat(
 	zmin=-ana_l[5]/2, zmax=ana_l[5]/2, ymin=-AW5/2, ymax=AW5/2,
   	mosaich=mosaic_h, mosaicv=mosaic_v,
 	r0=ana_r0, Q=ana_q)
  AT (0, y_an5[4], z_an5[4]) RELATIVE a4a
  ROTATED (90-thet_an5[4], 90.0, 0) RELATIVE a4a
GROUP Analyzer
EXTEND %{
  if(SCATTERED) {Ana5a = 4;
scat1=1;}
%}

COMPONENT an55a= Monochromator_flat(
 	zmin=-ana_l[5]/2, zmax=ana_l[5]/2, ymin=-AW5/2, ymax=AW5/2,
   	mosaich=mosaic_h, mosaicv=mosaic_v,
 	r0=ana_r0, Q=ana_q)
  AT (0, y_an5[5], z_an5[5]) RELATIVE a4a
  ROTATED (90-thet_an5[5], 90.0, 0) RELATIVE a4a
GROUP Analyzer
EXTEND %{
  if(SCATTERED) {Ana5a = 5;
scat1=1;}
%}


COMPONENT an61a= Monochromator_flat(
 	zmin=-ana_l[6]/2, zmax=ana_l[6]/2, ymin=-AW6/2, ymax=AW6/2,
   	mosaich=mosaic_h, mosaicv=mosaic_v,
 	r0=ana_r0, Q=ana_q)
  AT (0, y_an6[1], z_an6[1]) RELATIVE a4a
  ROTATED (90-thet_an6[1], 90.0, 0) RELATIVE a4a
GROUP Analyzer
EXTEND %{
  if(SCATTERED) {Ana6a = 1;
scat1=1;}
%}

COMPONENT an62a= Monochromator_flat(
 	zmin=-ana_l[6]/2, zmax=ana_l[6]/2, ymin=-AW6/2, ymax=AW6/2,
   	mosaich=mosaic_h, mosaicv=mosaic_v,
 	r0=ana_r0, Q=ana_q)
  AT (0, y_an6[2], z_an6[2]) RELATIVE a4a
  ROTATED (90-thet_an6[2], 90.0, 0) RELATIVE a4a
GROUP Analyzer
EXTEND %{
  if(SCATTERED) {Ana6a = 2;
scat1=1;}
%}

COMPONENT an63a= Monochromator_flat(
 	zmin=-ana_l[6]/2, zmax=ana_l[6]/2, ymin=-AW6/2, ymax=AW6/2,
   	mosaich=mosaic_h, mosaicv=mosaic_v,
 	r0=ana_r0, Q=ana_q)
  AT (0, y_an6[3], z_an6[3]) RELATIVE a4a
  ROTATED (90-thet_an6[3], 90.0, 0) RELATIVE a4a
GROUP Analyzer
EXTEND %{
  if(SCATTERED) {Ana6a = 3;
scat1=1;}
%}

COMPONENT an64a= Monochromator_flat(
 	zmin=-ana_l[6]/2, zmax=ana_l[6]/2, ymin=-AW6/2, ymax=AW6/2,
   	mosaich=mosaic_h, mosaicv=mosaic_v,
 	r0=ana_r0, Q=ana_q)
  AT (0, y_an6[4], z_an6[4]) RELATIVE a4a
  ROTATED (90-thet_an6[4], 90.0, 0) RELATIVE a4a
GROUP Analyzer
EXTEND %{
  if(SCATTERED) {Ana6a = 4;
scat1=1;}
%}

COMPONENT an65a= Monochromator_flat(
 	zmin=-ana_l[6]/2, zmax=ana_l[6]/2, ymin=-AW6/2, ymax=AW6/2,
   	mosaich=mosaic_h, mosaicv=mosaic_v,
 	r0=ana_r0, Q=ana_q)
  AT (0, y_an6[5], z_an6[5]) RELATIVE a4a
  ROTATED (90-thet_an6[5], 90.0, 0) RELATIVE a4a
GROUP Analyzer
EXTEND %{
  if(SCATTERED) {Ana6a = 5;
scat1=1;}
%}

COMPONENT an71a= Monochromator_flat(
 	zmin=-ana_l[7]/2, zmax=ana_l[7]/2, ymin=-AW7/2, ymax=AW7/2,
   	mosaich=mosaic_h, mosaicv=mosaic_v,
 	r0=ana_r0, Q=ana_q)
  AT (0, y_an7[1], z_an7[1]) RELATIVE a4a
  ROTATED (90-thet_an7[1], 90.0, 0) RELATIVE a4a
GROUP Analyzer
EXTEND %{
  if(SCATTERED) {Ana7a = 1;
scat1=1;}
%}

COMPONENT an72a= Monochromator_flat(
 	zmin=-ana_l[7]/2, zmax=ana_l[7]/2, ymin=-AW7/2, ymax=AW7/2,
   	mosaich=mosaic_h, mosaicv=mosaic_v,
 	r0=ana_r0, Q=ana_q)
  AT (0, y_an7[2], z_an7[2]) RELATIVE a4a
  ROTATED (90-thet_an7[2], 90.0, 0) RELATIVE a4a
GROUP Analyzer
EXTEND %{
  if(SCATTERED) {Ana7a = 2;
scat1=1;}
%}

COMPONENT an73a= Monochromator_flat(
 	zmin=-ana_l[7]/2, zmax=ana_l[7]/2, ymin=-AW7/2, ymax=AW7/2,
   	mosaich=mosaic_h, mosaicv=mosaic_v,
 	r0=ana_r0, Q=ana_q)
  AT (0, y_an7[3], z_an7[3]) RELATIVE a4a
  ROTATED (90-thet_an7[3], 90.0, 0) RELATIVE a4a
GROUP Analyzer
EXTEND %{
  if(SCATTERED) {Ana7a = 3;
scat1=1;}
%}

COMPONENT an74a= Monochromator_flat(
 	zmin=-ana_l[7]/2, zmax=ana_l[7]/2, ymin=-AW7/2, ymax=AW7/2,
   	mosaich=mosaic_h, mosaicv=mosaic_v,
 	r0=ana_r0, Q=ana_q)
  AT (0, y_an7[4], z_an7[4]) RELATIVE a4a
  ROTATED (90-thet_an7[4], 90.0, 0) RELATIVE a4a
GROUP Analyzer
EXTEND %{
  if(SCATTERED) {Ana7a = 4;
scat1=1;}
%}

COMPONENT an75a= Monochromator_flat(
 	zmin=-ana_l[7]/2, zmax=ana_l[7]/2, ymin=-AW7/2, ymax=AW7/2,
   	mosaich=mosaic_h, mosaicv=mosaic_v,
 	r0=ana_r0, Q=ana_q)
  AT (0, y_an7[5], z_an7[5]) RELATIVE a4a
  ROTATED (90-thet_an7[5], 90.0, 0) RELATIVE a4a
GROUP Analyzer
EXTEND %{
  if(SCATTERED) {Ana7a = 5;
scat1=1;}
%}


COMPONENT an81a= Monochromator_flat(
 	zmin=-ana_l[8]/2, zmax=ana_l[8]/2, ymin=-AW8/2, ymax=AW8/2,
   	mosaich=mosaic_h, mosaicv=mosaic_v,
 	r0=ana_r0, Q=ana_q)
  AT (0, y_an8[1], z_an8[1]) RELATIVE a4a
  ROTATED (90-thet_an8[1], 90.0, 0) RELATIVE a4a
GROUP Analyzer
EXTEND %{
  if(SCATTERED) {Ana8a = 1;
scat1=1;}
%}

COMPONENT an82a= Monochromator_flat(
 	zmin=-ana_l[8]/2, zmax=ana_l[8]/2, ymin=-AW8/2, ymax=AW8/2,
   	mosaich=mosaic_h, mosaicv=mosaic_v,
 	r0=ana_r0, Q=ana_q)
  AT (0, y_an8[2], z_an8[2]) RELATIVE a4a
  ROTATED (90-thet_an8[2], 90.0, 0) RELATIVE a4a
GROUP Analyzer
EXTEND %{
  if(SCATTERED) {Ana8a = 2;
scat1=1;}
%}

COMPONENT an83a= Monochromator_flat(
 	zmin=-ana_l[8]/2, zmax=ana_l[8]/2, ymin=-AW8/2, ymax=AW8/2,
   	mosaich=mosaic_h, mosaicv=mosaic_v,
 	r0=ana_r0, Q=ana_q)
  AT (0, y_an8[3], z_an8[3]) RELATIVE a4a
  ROTATED (90-thet_an8[3], 90.0, 0) RELATIVE a4a
GROUP Analyzer
EXTEND %{
  if(SCATTERED) {Ana8a = 3;
scat1=1;}
%}

COMPONENT an84a= Monochromator_flat(
 	zmin=-ana_l[8]/2, zmax=ana_l[8]/2, ymin=-AW8/2, ymax=AW8/2,
   	mosaich=mosaic_h, mosaicv=mosaic_v,
 	r0=ana_r0, Q=ana_q)
   AT (0, y_an8[4], z_an8[4]) RELATIVE a4a
  ROTATED (90-thet_an8[4], 90.0, 0) RELATIVE a4a
GROUP Analyzer
EXTEND %{
  if(SCATTERED) {Ana8a = 4;
scat1=1;}
%}

COMPONENT an85a= Monochromator_flat(
 	zmin=-ana_l[8]/2, zmax=ana_l[8]/2, ymin=-AW8/2, ymax=AW8/2,
   	mosaich=mosaic_h, mosaicv=mosaic_v,
 	r0=ana_r0, Q=ana_q)
  AT (0, y_an8[5], z_an8[5]) RELATIVE a4a
  ROTATED (90-thet_an8[5], 90.0, 0) RELATIVE a4a
GROUP Analyzer
EXTEND %{
  if(SCATTERED) {Ana8a = 5;
scat1=1;}
%}

//Included in the original file, but I think it kills events after the analyzers
COMPONENT a5a = Arm()
AT (0, 0, z_an8[6]+0.2) RELATIVE a4a
GROUP Analyzer
EXTEND %{
  SCATTER;
scat1=0;
%}


// Entire rack of Detectors
// A McStas PSD Montior (for use with the mcplot function) was used for ease
// during testing, but is NOT used during the generation of the simulations.
/*COMPONENT psd_monitor = PSD_monitor(
    filename="test", 
    xwidth=.28, 
    yheight=0.9, 
    restore_neutron=1)
AT (detx_2[3], dety_2-.01, detz_2[2]) RELATIVE a4a
ROTATED (90, 180, 0) RELATIVE a4a*/

COMPONENT psd_tube1_1a = PSD_Detector(
    // Note that nx and ny are negated by the use of events mode
    // which turns the tube into a timeofflight detector with absolute position given.
    // The gas tables, pressure, and threshold will siimulate the effects of real detectors
    // The detector component has not been modified since being given to Adit Desai.
    nx = 1, ny = 128, filename = "ReuterStokes1_1_1.psd",
    FN_Conv = "Gas_tables/He3inHe.table", FN_Stop = "Gas_tables/He3inCO2.table",
    radius = DET_rad, yheight = DET_len, threshold = 100,
    PressureConv = 7, PressureStop = 0.1, borderx = -1,
    xChDivRelSigma = 0, yChDivRelSigma = 0.006, type="events")
  WHEN (scat1==1) AT (detx_1[0], dety_1, detz_1[0]) RELATIVE a4a
  ROTATED (90, 0, ang_1[0]) RELATIVE a4a

COMPONENT psd_tube1_2a = PSD_Detector(
    nx = 1, ny = 128, filename = "ReuterStokes1_2_1.psd",
    FN_Conv = "Gas_tables/He3inHe.table", FN_Stop = "Gas_tables/He3inCO2.table",
    radius = DET_rad, yheight = DET_len, threshold = 100,
    PressureConv = 7, PressureStop = 0.1, borderx = -1,
    xChDivRelSigma = 0, yChDivRelSigma = 0.006, type="events")
  WHEN (scat1==1) AT (detx_1[1], dety_1, detz_1[1]) RELATIVE a4a
  ROTATED (90, 0, ang_1[1]) RELATIVE a4a

COMPONENT psd_tube1_3a = PSD_Detector(
    nx = 1, ny = 128, filename = "ReuterStokes1_3_1.psd",
    FN_Conv = "Gas_tables/He3inHe.table", FN_Stop = "Gas_tables/He3inCO2.table",
    radius = DET_rad, yheight = DET_len, threshold = 100,
    PressureConv = 7, PressureStop = 0.1, borderx = -1,
    xChDivRelSigma = 0, yChDivRelSigma = 0.006, type="events")
  WHEN (scat1==1) AT (detx_1[2], dety_1, detz_1[2]) RELATIVE a4a
  ROTATED (90, 0, ang_1[2]) RELATIVE a4a

COMPONENT psd_tube1_4a = PSD_Detector(
    nx = 1, ny = 128, filename = "ReuterStokes1_4_1.psd",
    FN_Conv = "Gas_tables/He3inHe.table", FN_Stop = "Gas_tables/He3inCO2.table",
    radius = DET_rad, yheight = DET_len, threshold = 100,
    PressureConv = 7, PressureStop = 0.1, borderx = -1,
    xChDivRelSigma = 0, yChDivRelSigma = 0.006, type="events")
  WHEN (scat1==1) AT (detx_1[3], dety_1, detz_1[3]) RELATIVE a4a
  ROTATED (90, 0, ang_1[3]) RELATIVE a4a

COMPONENT psd_tube1_5a = PSD_Detector(
    nx = 1, ny = 128, filename = "ReuterStokes1_5_1.psd",
    FN_Conv = "Gas_tables/He3inHe.table", FN_Stop = "Gas_tables/He3inCO2.table",
    radius = DET_rad, yheight = DET_len, threshold = 100,
    PressureConv = 7, PressureStop = 0.1, borderx = -1,
    xChDivRelSigma = 0, yChDivRelSigma = 0.006, type="events")
  WHEN (scat1==1) AT (detx_1[4], dety_1, detz_1[4]) RELATIVE a4a
  ROTATED (90, 0, ang_1[4]) RELATIVE a4a 

COMPONENT psd_tube1_6a = PSD_Detector(
    nx = 1, ny = 128, filename = "ReuterStokes1_6_1.psd",
    FN_Conv = "Gas_tables/He3inHe.table", FN_Stop = "Gas_tables/He3inCO2.table",
    radius = DET_rad, yheight = DET_len, threshold = 100,
    PressureConv = 7, PressureStop = 0.1, borderx = -1,
    xChDivRelSigma = 0, yChDivRelSigma = 0.006, type="events")
  WHEN (scat1==1) AT (detx_1[5], dety_1, detz_1[5]) RELATIVE a4a
  ROTATED (90, 0, ang_1[5]) RELATIVE a4a

COMPONENT psd_tube1_7a = PSD_Detector(
    nx = 1, ny = 128, filename = "ReuterStokes1_7_1.psd",
    FN_Conv = "Gas_tables/He3inHe.table", FN_Stop = "Gas_tables/He3inCO2.table",
    radius = DET_rad, yheight = DET_len, threshold = 100,
    PressureConv = 7, PressureStop = 0.1, borderx = -1,
    xChDivRelSigma = 0, yChDivRelSigma = 0.006, type="events")
  WHEN (scat1==1) AT (detx_1[6], dety_1, detz_1[6]) RELATIVE a4a
  ROTATED (90, 0, ang_1[6]) RELATIVE a4a

COMPONENT psd_tube2_1a = PSD_Detector(
    nx = 1, ny = 128, filename = "ReuterStokes2_1_1.psd",
    FN_Conv = "Gas_tables/He3inHe.table", FN_Stop = "Gas_tables/He3inCO2.table",
    radius = DET_rad, yheight = DET_len, threshold = 100,
    PressureConv = 7, PressureStop = 0.1, borderx = -1,
    xChDivRelSigma = 0, yChDivRelSigma = 0.006, type="events")
  WHEN (scat1==1) AT (detx_2[0], dety_2, detz_2[0]) RELATIVE a4a
  ROTATED (90, 0, ang_2[0]) RELATIVE a4a

COMPONENT psd_tube2_2a = PSD_Detector(
    nx = 5, ny = 128, filename = "ReuterStokes2_2_1.psd",
    FN_Conv = "Gas_tables/He3inHe.table", FN_Stop = "Gas_tables/He3inCO2.table",
    radius = DET_rad, yheight = DET_len, threshold = 100,
    PressureConv = 7, PressureStop = 0.1, borderx = -1,
    xChDivRelSigma = 0, yChDivRelSigma = 0.006, type="events")
  WHEN (scat1==1) AT (detx_2[1], dety_2, detz_2[1]) RELATIVE a4a
  ROTATED (90, 0, ang_2[1]) RELATIVE a4a

COMPONENT psd_tube2_3a = PSD_Detector(
    nx = 1, ny = 128, filename = "ReuterStokes2_3_1.psd",
    FN_Conv = "Gas_tables/He3inHe.table", FN_Stop = "Gas_tables/He3inCO2.table",
    radius = DET_rad, yheight = DET_len, threshold = 100,
    PressureConv = 7, PressureStop = 0.1, borderx = -1,
    xChDivRelSigma = 0, yChDivRelSigma = 0.006, type="events")
  WHEN (scat1==1) AT (detx_2[2], dety_2, detz_2[2]) RELATIVE a4a
  ROTATED (90, 0, ang_2[2]) RELATIVE a4a

COMPONENT psd_tube2_4a = PSD_Detector(
    nx = 1, ny = 128, filename = "ReuterStokes2_4_1.psd",
    FN_Conv = "Gas_tables/He3inHe.table", FN_Stop = "Gas_tables/He3inCO2.table",
    radius = DET_rad, yheight = DET_len, threshold = 100,
    PressureConv = 7, PressureStop = 0.1, borderx = -1,
    xChDivRelSigma = 0, yChDivRelSigma = 0.006, type="events")
  WHEN (scat1==1) AT (detx_2[3], dety_2, detz_2[3]) RELATIVE a4a
  ROTATED (90, 0, ang_2[3]) RELATIVE a4a

COMPONENT psd_tube2_5a = PSD_Detector(
    nx = 1, ny = 128, filename = "ReuterStokes2_5_1.psd",
    FN_Conv = "Gas_tables/He3inHe.table", FN_Stop = "Gas_tables/He3inCO2.table",
    radius = DET_rad, yheight = DET_len, threshold = 100,
    PressureConv = 7, PressureStop = 0.1, borderx = -1,
    xChDivRelSigma = 0, yChDivRelSigma = 0.006, type="events")
  WHEN (scat1==1) AT (detx_2[4], dety_2, detz_2[4]) RELATIVE a4a
  ROTATED (90, 0, ang_2[4]) RELATIVE a4a

COMPONENT psd_tube2_6a = PSD_Detector(
    nx = 1, ny = 128, filename = "ReuterStokes2_6_1.psd",
    FN_Conv = "Gas_tables/He3inHe.table", FN_Stop = "Gas_tables/He3inCO2.table",
    radius = DET_rad, yheight = DET_len, threshold = 100,
    PressureConv = 7, PressureStop = 0.1, borderx = -1,
    xChDivRelSigma = 0, yChDivRelSigma = 0.006, type="events")
  WHEN (scat1==1) AT (detx_2[5], dety_2, detz_2[5]) RELATIVE a4a
  ROTATED (90, 0, ang_2[5]) RELATIVE a4a


END
